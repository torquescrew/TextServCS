// Generated by CoffeeScript 1.6.3
var app, express, fs, http, openFile, openFolder, path, routes, u, user, wd;

express = require("express");

routes = require("./routes");

user = require("./routes/user");

http = require("http");

path = require("path");

wd = require("./walkDirectory");

fs = require("fs");

u = require("./util");

app = express();

app.set("port", process.env.PORT || 3000);

app.set("views", path.join(__dirname, "views"));

app.set("view engine", "jade");

app.use(express.favicon());

app.use(express.logger("dev"));

app.use(express.json());

app.use(express.urlencoded());

app.use(express.methodOverride());

app.use(app.router);

app.use(express["static"](path.join(__dirname, "public")));

if ("development" === app.get("env")) {
  app.use(express.errorHandler());
}

app.get("/", function(req, res) {
  return res.sendfile(__dirname + '/public/aceEditor.html');
});

app.get("/_open_file", function(req, res) {
  return openFile(req.query.filename, res);
});

app.get("/_open_folder", function(req, res) {
  var folder;
  folder = req.query.folderName;
  if (u.badString(folder)) {
    folder = '/Users/tobysuggate/Documents/Repos/CppDependencies/workspace/Dependancies';
  }
  return openFolder(folder, res);
});

app.get("/users", user.list);

http.createServer(app).listen(app.get("port"), function() {
  return console.log("Express server listening on port " + app.get("port"));
});

openFile = function(file, response) {
  return fs.readFile(file, function(err, data) {
    if (err) {
      throw err;
    }
    return response.json({
      filename: file,
      content: data.toString()
    });
  });
};

openFolder = function(folder, response) {
  if (u.okString(folder)) {
    return wd.getDirectoryList(folder, response);
  }
};
