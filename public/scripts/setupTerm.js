// Generated by CoffeeScript 1.6.3
var colWidth, resizeTerm, resizeTermHeight, resizeTermWidth, rowHeight, term, termId;

term = void 0;

termId = 'output2';

(function() {
  return window.onload = function() {
    var socket;
    socket = io.connect();
    return socket.on("connect", function() {
      term = new Terminal({
        cols: 80,
        rows: 10,
        useStyle: true,
        screenKeys: true
      });
      term.on("data", function(data) {
        return socket.emit("data", data);
      });
      term.on("title", function(title) {
        return document.title = title;
      });
      term.open(document.getElementById(termId));
      socket.on("data", function(data) {
        return term.write(data);
      });
      socket.on("disconnect", function() {
        return term.destroy();
      });
      resizeTerm();
      resizeEditor();
      return socket.emit("data", 'pwd\r');
    });
  };
}).call(this);

rowHeight = function() {
  var h;
  h = document.getElementsByClassName('terminal')[0].clientHeight;
  return h / term.rows;
};

colWidth = function() {
  var w;
  w = document.getElementsByClassName('terminal')[0].clientWidth;
  return w / term.cols;
};

resizeTerm = function() {
  resizeTermWidth();
  return resizeTermHeight();
};

resizeTermWidth = function() {
  var cols, parent;
  parent = document.getElementById(termId).clientWidth;
  cols = Math.floor(parent / colWidth()) - 4;
  if (cols !== term.cols) {
    return term.resize(cols, term.rows);
  }
};

resizeTermHeight = function() {
  var parent, rows;
  console.log("resizeHeight");
  parent = document.getElementById(termId).offsetHeight;
  rows = Math.floor(parent / rowHeight()) - 1;
  if (rows !== term.rows) {
    return term.resize(term.cols, rows);
  }
};
